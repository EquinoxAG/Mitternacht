!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOOTDRIVE	boot/mbr.asm	/^BOOTDRIVE db 0$/;"	d
CreatePagePat2MB	kernel/memory/vmemory.asm	/^CreatePagePat2MB:$/;"	l
CreatePagePat4KB	kernel/memory/vmemory.asm	/^CreatePagePat4KB:$/;"	l
DAP_PACKET	boot/mbr.asm	/^DAP_PACKET:$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction ClearScreen()$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction DrawCharacter( character )$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction DrawString( str_addr )$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction LoadVGADriver()$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction SetBackgroundAttribute( new_attr )$/;"	l
DeclareFunction	kernel/graphics/vga_driver.asm	/^DeclareFunction SetForegroundAttribute( new_attr )$/;"	l
DeclareFunction	kernel/heap/heap.asm	/^DeclareFunction InitialiseHeap( size )$/;"	l
DeclareFunction	kernel/heap/heap.asm	/^DeclareFunction PrintMemoryMap()$/;"	l
DeclareFunction	kernel/heap/heap.asm	/^DeclareFunction malloc( size, string_addr )$/;"	l
DeclareFunction	kernel/include/Morgenroete/test.asm	/^DeclareFunction HelloWord(strss)$/;"	l
DeclareFunction	kernel/include/Morgenroete/test.asm	/^DeclareFunction main(Dolo,Solo)$/;"	l
DeclareFunction	kernel/memory/pmemory.asm	/^DeclareFunction AllocateMemory( size, flags )$/;"	l
DeclareFunction	kernel/memory/pmemory.asm	/^DeclareFunction BlockFreeMemoryRange( PhysMemStart, PhysMemSize)$/;"	l
DeclareFunction	kernel/memory/pmemory.asm	/^DeclareFunction InitialiseMemoryManager( memoryMap, memoryMapLength )$/;"	l
DeclareFunction	kernel/memory/pmemory.asm	/^DeclareFunction IsFreeMemoryRange(PhysMemStart, PhysMemLength)$/;"	l
DeclareFunction	kernel/memory/pmemory.asm	/^DeclareFunction PrintMemoryMapE820()$/;"	l
DeclareFunction	kernel/memory/vmemory.asm	/^DeclareFunction InitialiseVirtualMemory( PML4_addr )$/;"	l
DeclareFunction	kernel/memory/vmemory.asm	/^DeclareFunction MapVirtToPhys( VirtMemAddr, PhysMemAddr, Length, Flags )$/;"	l
DeclareFunction	kernel/memory/vmemory.asm	/^DeclareFunction ReserveVirtMemRange( size )$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::StrConstructor(buffer_ptr, buffer_size)$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::append_int( ival )$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::append_inth( ival )$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::append_str( app_str )$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::c_str()$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::clear()$/;"	l
DeclareFunction	kernel/string/string.asm	/^DeclareFunction KString::nline()$/;"	l
DefaultMemUsage	kernel/heap/heap.asm	/^DefaultMemUsage db 'Reserved memory',0$/;"	d
DefineFunction	kernel/include/Morgenroete/test.asm	/^DefineFunction HelloWorld, 1$/;"	l
DrawStr	kernel/kernel.asm	/^DrawStr db 'Hallo Master File',0x0A,'Welt from kernel',CONSOLE_CHANGEFG(COLOR_RED),'String red background',0$/;"	d
DummyFunction	kernel/graphics/vga_driver.asm	/^DummyFunction:$/;"	l
EndFunction	kernel/graphics/vga_driver.asm	/^EndFunction$/;"	l
EndFunction	kernel/heap/heap.asm	/^EndFunction$/;"	l
EndFunction	kernel/include/Morgenroete/test.asm	/^EndFunction$/;"	l
EndFunction	kernel/memory/pmemory.asm	/^EndFunction$/;"	l
EndFunction	kernel/memory/vmemory.asm	/^EndFunction$/;"	l
EndFunction	kernel/string/string.asm	/^EndFunction$/;"	l
Font8X8BIOS	kernel/graphics/vga_driver.asm	/^Font8X8BIOS:$/;"	l
GraphicDriverInterface	kernel/graphics/vga_driver.asm	/^GraphicDriverInterface:$/;"	l
HeapSettings	kernel/heap/heap.asm	/^HeapSettings:$/;"	l
INCLUDE	kernel/graphics/vga_driver.asm	/^INCLUDE "graphics\/vga_driver.inc"$/;"	l
INCLUDE	kernel/heap/heap.asm	/^INCLUDE "graphics\/vga_driver.inc"$/;"	l
INCLUDE	kernel/heap/heap.asm	/^INCLUDE "heap\/heap.inc"$/;"	l
INCLUDE	kernel/heap/heap.asm	/^INCLUDE "memory\/physical_memory.inc"$/;"	l
INCLUDE	kernel/heap/heap.asm	/^INCLUDE "memory\/virtual_memory.inc"$/;"	l
INCLUDE	kernel/heap/heap.asm	/^INCLUDE "string\/string.inc"$/;"	l
INCLUDE	kernel/kernel.asm	/^INCLUDE "boot\/multiboot.inc"$/;"	l
INCLUDE	kernel/kernel.asm	/^INCLUDE "graphics\/vga_driver.inc"$/;"	l
INCLUDE	kernel/kernel.asm	/^INCLUDE "heap\/heap.inc"$/;"	l
INCLUDE	kernel/kernel.asm	/^INCLUDE "memory\/physical_memory.inc"$/;"	l
INCLUDE	kernel/kernel.asm	/^INCLUDE "memory\/virtual_memory.inc"$/;"	l
INCLUDE	kernel/memory/pmemory.asm	/^INCLUDE "graphics\/vga_driver.inc"$/;"	l
INCLUDE	kernel/memory/pmemory.asm	/^INCLUDE "memory\/physical_memory.inc"$/;"	l
INCLUDE	kernel/memory/pmemory.asm	/^INCLUDE "memory\/virtual_memory.inc"$/;"	l
INCLUDE	kernel/memory/pmemory.asm	/^INCLUDE "string\/string.inc"$/;"	l
INCLUDE	kernel/memory/vmemory.asm	/^INCLUDE "memory\/virtual_memory.inc"$/;"	l
INCLUDE	kernel/string/string.asm	/^INCLUDE "string\/string.inc"$/;"	l
ImportAllMgrFunctions	kernel/graphics/vga_driver.asm	/^ImportAllMgrFunctions$/;"	l
ImportAllMgrFunctions	kernel/heap/heap.asm	/^ImportAllMgrFunctions$/;"	l
ImportAllMgrFunctions	kernel/include/Morgenroete/test.asm	/^ImportAllMgrFunctions$/;"	l
ImportAllMgrFunctions	kernel/kernel.asm	/^ImportAllMgrFunctions$/;"	l
ImportAllMgrFunctions	kernel/memory/pmemory.asm	/^ImportAllMgrFunctions$/;"	l
ImportAllMgrFunctions	kernel/string/string.asm	/^ImportAllMgrFunctions$/;"	l
InitialisePaging	boot/prekernel.asm	/^InitialisePaging:$/;"	l
LongMode	boot/prekernel.asm	/^LongMode:$/;"	l
MbrStrucAddr	kernel/kernel.asm	/^MbrStrucAddr resq 0$/;"	l
Msg_blocked_mem	kernel/memory/pmemory.asm	/^Msg_blocked_mem db 'Unusable memory',0$/;"	d
MultibootStruc_safer	boot/prekernel.asm	/^MultibootStruc_safer resd 1$/;"	l
MyIntok	kernel/include/Morgenroete/test.asm	/^MyIntok:$/;"	l
NoLongModeMsg	boot/prekernel.asm	/^NoLongModeMsg db 'Long mode %x isi %d not available the OS can not boot please restart the PC', 0$/;"	d
ProtectedMode	boot/mbr.asm	/^ProtectedMode:$/;"	l
VGA_ColorPalette	kernel/graphics/vga_driver.asm	/^VGA_ColorPalette dd RGB18(0x00,0x00,0xFF),RGB18(0x00,0xFF,0x00),RGB18(0x33,0xCC,0xFF),RGB18(0xFF,0x00,0x00),RGB18(0xCC,0x33,0xFF),RGB18(0xB8,0x5C,0x00),\\$/;"	d
_OwnGDT	boot/prekernel.asm	/^	_OwnGDT:$/;"	l
_start	boot/mbr.asm	/^_start:$/;"	l
_start	boot/prekernel.asm	/^_start:$/;"	l
add	boot/mbr.asm	/^add di, 4$/;"	l
add	boot/mbr.asm	/^add di, cx$/;"	l
and	boot/mbr.asm	/^and al, ~1$/;"	l
ax-page-size	makefile	/^	ld -z max-page-size=0x1000 -nostdlib -m elf_x86_64 -T .\/kernel\/link.ld -o .\/bin\/kernel.bin .\/bin\/prekernel.elf .\/bin\/kernel.elf .\/bin\/vga_driver.elf .\/bin\/pmemory_driver.elf .\/bin\/vmemory_driver.elf .\/bin\/string.elf .\/bin\/heap.elf$/;"	m
clc	boot/mbr.asm	/^clc$/;"	l
cli	boot/mbr.asm	/^cli$/;"	l
cmp	boot/mbr.asm	/^cmp al, 0xFF$/;"	l
cmp	boot/mbr.asm	/^cmp cx, 64$/;"	l
db	boot/mbr.asm	/^db 0$/;"	l
db	boot/mbr.asm	/^db 0x55$/;"	l
db	boot/mbr.asm	/^db 0x7D$/;"	l
db	boot/mbr.asm	/^db 0x80$/;"	l
db	boot/mbr.asm	/^db 0xAA$/;"	l
db	boot/mbr.asm	/^db 2$/;"	l
dd	boot/mbr.asm	/^dd 0$/;"	l
dd	boot/mbr.asm	/^dd 3$/;"	l
dw	boot/mbr.asm	/^dw 0$/;"	l
dw	boot/mbr.asm	/^dw 3$/;"	l
extern	boot/prekernel.asm	/^extern kernelMain$/;"	l
extern	kernel/memory/pmemory.asm	/^extern kernel_end$/;"	l
extern	kernel/memory/pmemory.asm	/^extern kernel_start$/;"	l
fatal_error	boot/mbr.asm	/^fatal_error:$/;"	l
gdt	boot/mbr.asm	/^gdt:$/;"	l
gdt_end	boot/mbr.asm	/^gdt_end dd gdt$/;"	d
gdt_limit	boot/mbr.asm	/^gdt_limit dw 24$/;"	d
global	boot/prekernel.asm	/^global _start$/;"	l
global	kernel/graphics/vga_driver.asm	/^global GraphicDriverInterface$/;"	l
global	kernel/kernel.asm	/^global kernelMain$/;"	l
graphic_720x480x16	kernel/graphics/vga_driver.asm	/^graphic_720x480x16:$/;"	l
in	boot/mbr.asm	/^in al, 0x92$/;"	l
int	boot/mbr.asm	/^int 0x13$/;"	l
int	boot/mbr.asm	/^int 0x15$/;"	l
interface_close	kernel/include/Morgenroete/test.asm	/^interface_close$/;"	l
interface_close	kernel/memory/vmemory.asm	/^interface_close$/;"	l
interface_open	kernel/include/Morgenroete/test.asm	/^interface_open multiboot$/;"	l
interface_open	kernel/include/Morgenroete/test.asm	/^interface_open multiboot2$/;"	l
interface_open	kernel/include/Morgenroete/test.asm	/^interface_open point$/;"	l
interface_open	kernel/memory/vmemory.asm	/^interface_open FreemapEntry$/;"	l
interface_open	kernel/memory/vmemory.asm	/^interface_open FreemapHead$/;"	l
ja	boot/mbr.asm	/^ja .multiple_load$/;"	l
jc	boot/mbr.asm	/^jc .next$/;"	l
jc	boot/mbr.asm	/^jc fatal_error$/;"	l
jmp	boot/mbr.asm	/^jmp 0x8:ProtectedMode$/;"	l
jnz	boot/mbr.asm	/^jnz .again_mmap$/;"	l
jz	boot/mbr.asm	/^jz fatal_error$/;"	l
kernelMain	kernel/kernel.asm	/^kernelMain:$/;"	l
mov	boot/mbr.asm	/^mov ah, 0x42$/;"	l
mov	boot/mbr.asm	/^mov byte[ BOOTDRIVE ], dl$/;"	l
mov	boot/mbr.asm	/^mov cr0, eax$/;"	l
mov	boot/mbr.asm	/^mov cx, word[ 0x7C00 + 500 ]$/;"	l
mov	boot/mbr.asm	/^mov di, mmap_addr+4$/;"	l
mov	boot/mbr.asm	/^mov dl, byte[ BOOTDRIVE ]$/;"	l
mov	boot/mbr.asm	/^mov ds, ax$/;"	l
mov	boot/mbr.asm	/^mov dword[ DAP_PACKET.start_lba ], 1$/;"	l
mov	boot/mbr.asm	/^mov dword[ MultibootStrucAddr + multiboot.flags ], 64$/;"	l
mov	boot/mbr.asm	/^mov dword[ MultibootStrucAddr + multiboot.mmap_addr ], mmap_addr$/;"	l
mov	boot/mbr.asm	/^mov dword[ di ], ecx$/;"	l
mov	boot/mbr.asm	/^mov eax, 0xE820$/;"	l
mov	boot/mbr.asm	/^mov eax, cr0$/;"	l
mov	boot/mbr.asm	/^mov ecx, 24$/;"	l
mov	boot/mbr.asm	/^mov edx, 0x534D4150 $/;"	l
mov	boot/mbr.asm	/^mov edx, 0xE820$/;"	l
mov	boot/mbr.asm	/^mov es, ax$/;"	l
mov	boot/mbr.asm	/^mov si, DAP_PACKET$/;"	l
mov	boot/mbr.asm	/^mov sp, 0x9000$/;"	l
mov	boot/mbr.asm	/^mov ss, ax$/;"	l
mov	boot/mbr.asm	/^mov word[ DAP_PACKET.count ], cx$/;"	l
mov	boot/mbr.asm	/^mov word[ DAP_PACKET.segment ], 0x1000$/;"	l
my_magic	boot/prekernel.asm	/^	my_magic dd MAGIC$/;"	d
or	boot/mbr.asm	/^or al, 2$/;"	l
or	boot/mbr.asm	/^or eax, 1$/;"	l
or	boot/mbr.asm	/^or ebx, ebx$/;"	l
org	boot/mbr.asm	/^org 0x7C00$/;"	l
out	boot/mbr.asm	/^out 0x92, al$/;"	l
physical_memory_manager	kernel/memory/pmemory.asm	/^physical_memory_manager:$/;"	l
popf	boot/mbr.asm	/^popf$/;"	l
pushf	boot/mbr.asm	/^pushf$/;"	l
section	boot/prekernel.asm	/^section .bss$/;"	l
section	boot/prekernel.asm	/^section .text$/;"	l
section	kernel/heap/heap.asm	/^section .bss$/;"	l
section	kernel/kernel.asm	/^section .bss$/;"	l
section	kernel/memory/pmemory.asm	/^section .bss$/;"	l
section	kernel/memory/vmemory.asm	/^section .bss$/;"	l
sub	boot/mbr.asm	/^sub di, 4$/;"	l
times	boot/mbr.asm	/^times 0x1be-($-$$) hlt	$/;"	l
times	boot/mbr.asm	/^times 510-($-$$) hlt$/;"	l
vga_driver_settings	kernel/graphics/vga_driver.asm	/^vga_driver_settings:$/;"	l
virtual_memory_driver	kernel/memory/vmemory.asm	/^virtual_memory_driver:$/;"	l
write_dac_color	kernel/graphics/vga_driver.asm	/^write_dac_color:$/;"	l
write_vga_regs	kernel/graphics/vga_driver.asm	/^write_vga_regs:$/;"	l
xchg	boot/mbr.asm	/^xchg eax, edx$/;"	l
xor	boot/mbr.asm	/^xor ax, ax$/;"	l
xor	boot/mbr.asm	/^xor ebx, ebx$/;"	l
